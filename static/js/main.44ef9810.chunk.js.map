{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","some","tab","id","className","map","index","classNames","href","onClick","title","find","content","App","React","useState","tabId","setTabId","ReactDOM","render","document","getElementById"],"mappings":"uMASaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAaH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE/C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GAAN,OACR,oBAEE,UAAQ,MACRF,UAAWG,IAAW,CACpB,YAAaL,EAAIC,KAAOL,IACjBE,IAAeM,IAL1B,SAQE,mBACEE,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,WACHX,IAAkBI,EAAIC,IACxBJ,EAAcG,IALpB,SASGA,EAAIQ,SAhBFR,EAAIC,WAuBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,UACG,UAAAP,EAAKc,MAAK,SAAAT,GAAG,OAAIA,EAAIC,KAAOL,YAA5B,eAA4Cc,UAAW,WCvCnDf,G,kBAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,eACxC,CAAET,GAAI,QAASO,MAAO,QAASE,QAAS,iBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAA0BC,IAAMC,SAASlB,EAAK,GAAGM,IAAjD,mBAAOa,EAAP,KAAcC,EAAd,KAMA,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBP,EAAKc,MAAK,SAAAT,GAAG,OAAIA,EAAIC,KAAOa,YADlD,aACsB,EAAoCN,SAG1D,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAekB,EACfjB,cAbY,SAACG,GACjBe,EAASf,EAAIC,WCdjBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.44ef9810.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../react-app-env.d';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = tabs.some(tab => tab.id === selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': tab.id === selectedTabId\n                  || (!currentTab && !index),\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (selectedTabId !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content || null}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Tab } from './react-app-env.d';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [tabId, setTabId] = React.useState(tabs[0].id);\n\n  const changeTab = (tab: Tab) => {\n    setTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === tabId)?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={tabId}\n        onTabSelected={changeTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}